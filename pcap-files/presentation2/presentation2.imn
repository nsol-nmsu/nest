node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth0
	 ipv6 address 2001:0::1/128
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {187.0 266.0}
    labelcoords {187.0 298.0}
    interface-peer {eth0 n16}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ipv6 address 2001:0::2/128
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {277.0 332.0}
    labelcoords {277.0 364.0}
    interface-peer {eth0 n16}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth0
	 ipv6 address 2001:0::3/128
	 ip address 10.0.0.3/24
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
    }
    canvas c1
    iconcoords {346.0 361.0}
    labelcoords {346.0 393.0}
    interface-peer {eth0 n16}
    interface-peer {eth1 n17}
    services {zebra vtysh OLSR IPForward pcap}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n3.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	}
    }
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth0
	 ipv6 address 2001:0::4/128
	 ip address 10.0.0.4/24
	!
    }
    canvas c1
    iconcoords {516.0 366.0}
    labelcoords {516.0 398.0}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n4.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward pcap}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth0
	 ipv6 address 2001:0::5/128
	 ip address 10.0.0.5/24
	!
    }
    canvas c1
    iconcoords {593.0 349.0}
    labelcoords {593.0 381.0}
    interface-peer {eth0 n16}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 ipv6 address 2001:0::6/128
	 ip address 10.0.0.6/24
	!
    }
    canvas c1
    iconcoords {643.0 292.0}
    labelcoords {643.0 324.0}
    interface-peer {eth0 n16}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth0
	 ipv6 address 2001:0::7/128
	 ip address 10.0.0.7/24
	!
    }
    canvas c1
    iconcoords {664.0 235.0}
    labelcoords {664.0 267.0}
    interface-peer {eth0 n16}
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth0
	 ipv6 address 2001:0::8/128
	 ip address 10.0.0.8/24
	!
    }
    canvas c1
    iconcoords {668.0 117.0}
    labelcoords {668.0 149.0}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n8.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward pcap}
}

node n9 {
    type router
    model router
    network-config {
	hostname n9
	!
	interface eth0
	 ipv6 address 2001:0::9/128
	 ip address 10.0.0.9/24
	!
    }
    canvas c1
    iconcoords {586.0 67.0}
    labelcoords {586.0 99.0}
    interface-peer {eth0 n16}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n9.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward pcap}
}

node n10 {
    type router
    model router
    network-config {
	hostname n10
	!
	interface eth0
	 ipv6 address 2001:0::10/128
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {454.0 57.0}
    labelcoords {454.0 89.0}
    interface-peer {eth0 n16}
}

node n11 {
    type router
    model router
    network-config {
	hostname n11
	!
	interface eth0
	 ipv6 address 2001:0::11/128
	 ip address 10.0.0.11/24
	!
    }
    canvas c1
    iconcoords {388.0 49.0}
    labelcoords {388.0 81.0}
    interface-peer {eth0 n16}
}

node n12 {
    type router
    model router
    network-config {
	hostname n12
	!
	interface eth0
	 ipv6 address 2001:0::12/128
	 ip address 10.0.0.12/24
	!
    }
    canvas c1
    iconcoords {289.0 55.0}
    labelcoords {289.0 87.0}
    interface-peer {eth0 n16}
}

node n13 {
    type router
    model router
    network-config {
	hostname n13
	!
	interface eth0
	 ipv6 address 2001:0::13/128
	 ip address 10.0.0.13/24
	!
    }
    canvas c1
    iconcoords {226.0 82.0}
    labelcoords {226.0 114.0}
    interface-peer {eth0 n16}
}

node n14 {
    type router
    model router
    network-config {
	hostname n14
	!
	interface eth0
	 ipv6 address 2001:0::14/128
	 ip address 10.0.0.14/24
	!
    }
    canvas c1
    iconcoords {208.0 127.0}
    labelcoords {208.0 159.0}
    interface-peer {eth0 n16}
}

node n15 {
    type router
    model router
    network-config {
	hostname n15
	!
	interface eth0
	 ipv6 address 2001:0::15/128
	 ip address 10.0.0.15/24
	!
    }
    canvas c1
    iconcoords {185.0 181.0}
    labelcoords {185.0 213.0}
    interface-peer {eth0 n16}
}

node n16 {
    type wlan
    network-config {
	hostname wlan16
	!
	interface wireless
	 ipv6 address 2001:0::0/128
	 ip address 10.0.0.0/24
	!
	mobmodel
	coreapi
	basic_range
	!
    }
    custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=275
	bandwidth=54000000
	jitter=0
	delay=20000
	error=0
	}
    }
    canvas c1
    iconcoords {449.0 199.0}
    labelcoords {449.0 231.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
    interface-peer {e4 n5}
    interface-peer {e5 n6}
    interface-peer {e6 n7}
    interface-peer {e7 n8}
    interface-peer {e8 n9}
    interface-peer {e9 n10}
    interface-peer {e10 n11}
    interface-peer {e11 n12}
    interface-peer {e12 n13}
    interface-peer {e13 n14}
    interface-peer {e14 n15}
}

node n17 {
    type router
    model router
    network-config {
	hostname n17
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
    }
    canvas c1
    iconcoords {345.0 496.0}
    labelcoords {345.0 528.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n18}
}

node n18 {
    type router
    model router
    network-config {
	hostname n18
	!
	interface eth1
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
	interface eth0
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
    }
    canvas c1
    iconcoords {481.0 581.0}
    labelcoords {481.0 613.0}
    interface-peer {eth0 n17}
    interface-peer {eth1 n19}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n18.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward pcap}
}

node n19 {
    type router
    model router
    network-config {
	hostname n19
	!
	interface eth1
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	!
	interface eth0
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
    }
    canvas c1
    iconcoords {595.0 462.0}
    labelcoords {595.0 494.0}
    interface-peer {eth0 n18}
    interface-peer {eth1 n23}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n19.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward pcap}
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	 ip address 10.0.4.20/24
	 ipv6 address 2001:4::20/64
	!
    }
    canvas c1
    iconcoords {807.0 642.0}
    labelcoords {807.0 674.0}
    interface-peer {eth0 n23}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	 ip address 10.0.4.21/24
	 ipv6 address 2001:4::21/64
	!
    }
    canvas c1
    iconcoords {910.0 473.0}
    labelcoords {910.0 505.0}
    interface-peer {eth0 n23}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n21.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	
	}
    }
    services {DefaultRoute pcap}
}

node n22 {
    type router
    model PC
    network-config {
	hostname n22
	!
	interface eth0
	 ip address 10.0.4.22/24
	 ipv6 address 2001:4::22/64
	!
    }
    canvas c1
    iconcoords {867.0 366.0}
    labelcoords {867.0 398.0}
    interface-peer {eth0 n23}
    custom-config {
	custom-config-id service:pcap
	custom-command pcap
	config {
	files=('pcap.sh', )
	}
    }
    custom-config {
	custom-config-id service:pcap:pcap.sh
	custom-command pcap.sh
	config {
	
	#!/bin/sh
	# set tcpdump options here (see 'man tcpdump' for help)
	# (-s snap length, -C limit pcap file length, -n disable name resolution)
	DUMPOPTS="-s 12288 -C 10 -n"
	
	if [ "x$1" = "xstart" ]; then
	
	tcpdump ${DUMPOPTS} -w n22.eth0.pcap -i eth0 < /dev/null &
	
	pid=$!
	sleep 10.0s
	kill $pid
	
	elif [ "x$1" = "xstop" ]; then
	    mkdir -p /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	    mv *.pcap /home/john/ns-3.25/ns-3.25/imn2ns3/pcap-files/presentation2/core/
	fi;
	
	}
    }
    services {DefaultRoute pcap}
}

node n23 {
    type lanswitch
    network-config {
	hostname n23
	!
    }
    canvas c1
    iconcoords {738.0 479.0}
    labelcoords {738.0 503.0}
    interface-peer {e0 n19}
    interface-peer {e1 n20}
    interface-peer {e2 n21}
    interface-peer {e3 n22}
}

link l1 {
    nodes {n16 n1}
}

link l2 {
    nodes {n16 n2}
}

link l3 {
    nodes {n16 n3}
}

link l4 {
    nodes {n16 n4}
}

link l5 {
    nodes {n16 n5}
}

link l6 {
    nodes {n16 n6}
}

link l7 {
    nodes {n16 n7}
}

link l8 {
    nodes {n16 n8}
}

link l9 {
    nodes {n16 n9}
}

link l10 {
    nodes {n16 n10}
}

link l11 {
    nodes {n16 n11}
}

link l12 {
    nodes {n16 n12}
}

link l13 {
    nodes {n16 n13}
}

link l14 {
    nodes {n16 n14}
}

link l15 {
    nodes {n16 n15}
}

link l16 {
    delay 160
    nodes {n3 n17}
    bandwidth 10000000
}

link l17 {
    delay 160
    nodes {n17 n18}
    bandwidth 10000000
}

link l18 {
    delay 160
    nodes {n18 n19}
    bandwidth 10000000
}

link l19 {
    delay 160
    nodes {n19 n23}
    bandwidth 10000000
}

link l20 {
    delay 160
    nodes {n23 n20}
    bandwidth 10000000
}

link l21 {
    delay 160
    nodes {n23 n21}
    bandwidth 10000000
}

link l22 {
    delay 160
    nodes {n23 n22}
    bandwidth 10000000
}

canvas c1 {
    name {Canvas1}
}

traffic {
    {n9 to n4 udp} 1 1 11 n9 n4 10.0.0.9 80 {} 10.0.0.4 80 /var/log/mgen1.log UDP {} {PERIODIC [5.0 1024]} {}
    {n22 to n19 udp} 2 2 12 n22 n19 10.0.4.22 80 {} 10.0.3.2 80 /var/log/mgen2.log UDP {} {PERIODIC [5.0 1024]} {}
    {n8 to n3 tcp} 3 3.0 13 n8 n3 10.0.0.8 80 {} 10.0.0.3 80 /var/log/mgen3.log TCP {} {PERIODIC [5.0 1024]} {}
    {n21 to n18 tcp} 4 4 14 n21 n18 10.0.4.21 80 {} 10.0.2.2 80 /var/log/mgen4.log TCP {} {PERIODIC [5.0 1024]} {}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 1
}

option session {
}

